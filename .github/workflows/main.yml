name: CI/CD Docker

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE: ghor.io/${{ github.actor }}/team-pl
  VERSION: ${{ github.sha }}
  NAME: cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layer
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          context: .
          build-args: |
            "STAGE=${{ secrets.STAGE }}"
            "POSTGRE_HOST=${{ secrets.POSTGRE_HOST }}"
            "SWAGGER_USER=${{ secrets.SWAGGER_USER }}"
            "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}"
  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, Linux, x64]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run --add-host=host.docker:internal:host-gateway -d -p 80:3000 --name ${{ env.NAME }} --restart always ${{ env.DOCKER_IMAGE }}:latest
